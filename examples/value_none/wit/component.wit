package test:guest;

interface host {
    log: func(message: string);

    result-option: func(is-some: bool) -> option<s32>;
    result-result: func(is-ok: bool) -> result<s32, s32>;
    result-result-ok: func(is-ok: bool) -> result<s32>;
    result-result-err: func(is-ok: bool) -> result<_, s32>;
    result-result-none: func(is-ok: bool) -> result;

    params-option: func(param: option<s32>) -> string;
    // params-result: func(param: result<s32, s32>) -> string;
    // params-result-ok: func(param: result<_, s32>) -> string;
    // params-result-err: func(param: result<s32>) -> string;
    // params-result-none: func(param: result) -> string;
}

interface run {
    start: func();
}

world guest {
    import host;

    export run;
}